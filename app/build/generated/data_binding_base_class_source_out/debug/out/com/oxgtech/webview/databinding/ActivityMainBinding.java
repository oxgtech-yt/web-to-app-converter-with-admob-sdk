// Generated by view binder compiler. Do not edit!
package com.oxgtech.webview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.gms.ads.AdView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.oxgtech.webview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final AdView bannerAd;

  @NonNull
  public final BottomAppBar bottomAppBar;

  @NonNull
  public final LottieAnimationView loadingAnimation;

  @NonNull
  public final ConstraintLayout loadingScreen;

  @NonNull
  public final TextView loadingText;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final WebView webView;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull AdView bannerAd,
      @NonNull BottomAppBar bottomAppBar, @NonNull LottieAnimationView loadingAnimation,
      @NonNull ConstraintLayout loadingScreen, @NonNull TextView loadingText,
      @NonNull LinearProgressIndicator progressBar, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull MaterialToolbar toolbar, @NonNull WebView webView) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bannerAd = bannerAd;
    this.bottomAppBar = bottomAppBar;
    this.loadingAnimation = loadingAnimation;
    this.loadingScreen = loadingScreen;
    this.loadingText = loadingText;
    this.progressBar = progressBar;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.toolbar = toolbar;
    this.webView = webView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bannerAd;
      AdView bannerAd = ViewBindings.findChildViewById(rootView, id);
      if (bannerAd == null) {
        break missingId;
      }

      id = R.id.bottomAppBar;
      BottomAppBar bottomAppBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomAppBar == null) {
        break missingId;
      }

      id = R.id.loadingAnimation;
      LottieAnimationView loadingAnimation = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimation == null) {
        break missingId;
      }

      id = R.id.loadingScreen;
      ConstraintLayout loadingScreen = ViewBindings.findChildViewById(rootView, id);
      if (loadingScreen == null) {
        break missingId;
      }

      id = R.id.loadingText;
      TextView loadingText = ViewBindings.findChildViewById(rootView, id);
      if (loadingText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, appBarLayout, bannerAd,
          bottomAppBar, loadingAnimation, loadingScreen, loadingText, progressBar,
          swipeRefreshLayout, toolbar, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
